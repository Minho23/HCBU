unit FLIGHT_SELECT_U;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  rImprovedComps, Vcl.ComCtrls, Data.DB, Vcl.Grids, Vcl.DBGrids, rDBGrid,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Vcl.Buttons, rDBGrid_MS;

procedure AZZERA_CAMPI;

type
  TFLIGHT_SELECT_F = class(TForm)
    rGroupBox1: TrGroupBox;
    rg_flight_type: TRadioGroup;
    rgb_limit: TrGroupBox;
    Label2: TLabel;
    edata1: TDateTimePicker;
    etime1: TDateTimePicker;
    Label1: TLabel;
    edata2: TDateTimePicker;
    etime2: TDateTimePicker;
    rgb_etl: TrGroupBox;
    Panel2: TPanel;
    Label3: TLabel;
    edate: TDateTimePicker;
    DBGrid2: TrDBGrid;
    qp: TFDQuery;
    DataSource2: TDataSource;
    bt_replay_or_chart: TBitBtn;
    q_select: TFDQuery;
    rgb_fl: TrGroupBox;
    gs: TrDBGrid_MS;
    q1: TFDQuery;
    DataSource1: TDataSource;
    procedure rg_flight_typeClick(Sender: TObject);
    procedure edateExit(Sender: TObject);
    procedure edateKeyPress(Sender: TObject; var Key: Char);
    procedure bt_replay_or_chartClick(Sender: TObject);
    procedure DBGrid2DblClick(Sender: TObject);
    procedure gsDblClick(Sender: TObject);
    procedure gsDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure edata1Exit(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FLIGHT_SELECT_F: TFLIGHT_SELECT_F;
  start_datetime, end_datetime: TDateTime;

implementation

uses login_u, Main;

{$R *.dfm}

procedure AZZERA_CAMPI;
begin
  with FLIGHT_SELECT_F do
  begin
    edata1.Date := now - 1;
    etime1.Time := strtotime('00:00');
    edata2.Date := now;
    etime2.Time := now;
    edate.Date := now;

    rg_flight_type.ItemIndex := 0;
    rgb_fl.Enabled := false;
  end;
end;

procedure TFLIGHT_SELECT_F.bt_replay_or_chartClick(Sender: TObject);

begin

  // AGGIUNGERE IF PER ETL
  with q_select do
  begin
    close;
    ParamByName('DATE_START').AsString := f_timestamp(edata1, etime1);
    ParamByName('DATE_END').AsString := f_timestamp(edata2, etime2);
    ParamByName('MARCHE').AsString := PRINCIPALE.etopic.Text;
    open;
  end;

  start_datetime := edata1.Date;
  Replacetime(start_datetime, etime1.Time);
  end_datetime := edata2.Date;
  Replacetime(end_datetime, etime2.Time);

  FLIGHT_SELECT_F.close;
end;

procedure TFLIGHT_SELECT_F.DBGrid2DblClick(Sender: TObject);
begin

  rgb_fl.Enabled := true;
  with q1 do
  begin

    q1.close;
    ParamByName('REGISTRATION').AsString := PRINCIPALE.etopic.Text;

    ParamByName('FROM_ID').AsInteger := qp['ETL_PAGE_ID'];

    q1.FetchOptions.RecsMax := -1;

    open;
  end;

end;

procedure TFLIGHT_SELECT_F.edata1Exit(Sender: TObject);
begin
  edata2.Date := edata1.Date;
end;

procedure TFLIGHT_SELECT_F.edateExit(Sender: TObject);
begin
  with qp do
  begin
    close;
    ParamByName('MARCHE').AsString := PRINCIPALE.etopic.Text;
    ParamByName('DT').AsDate := edate.Date;
    open;
  end;

end;

procedure TFLIGHT_SELECT_F.edateKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
    edateExit(edate);

end;

procedure TFLIGHT_SELECT_F.FormCreate(Sender: TObject);
begin
  TRadioButton(rg_flight_type.Controls[0]).Enabled := false;
end;

procedure TFLIGHT_SELECT_F.FormShow(Sender: TObject);
begin
  edata1.Date := now();
  edata2.Date := now();

  etime1.Time := now();
  etime2.Time := now();

end;

procedure TFLIGHT_SELECT_F.gsDblClick(Sender: TObject);
begin
  with q_select do
  begin
    close;
    ParamByName('DATE_START').AsString := FormatDateTime('yyyy-mm-dd hh:nn:ss',
      DataSource2.DataSet.FieldByName('DATETIME_OPEN_PAGE').AsDateTime);
    ParamByName('DATE_END').AsString := FormatDateTime('yyyy-mm-dd hh:nn:ss',
      DataSource2.DataSet.FieldByName('DATETIME_CLOSE_PAGE').AsDateTime);
    ParamByName('MARCHE').AsString := PRINCIPALE.etopic.Text;
    open;
  end;
  FLIGHT_SELECT_F.close;
end;

procedure TFLIGHT_SELECT_F.gsDrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
  if DataCol = 0 then
    gs.Canvas.TextOut(Rect.Left + 2, Rect.Top,
      IntToStr(DataSource1.DataSet.RecNo));
  if (Column.FieldName = 'FLIGHT_NUMBER_X') then
  begin
    if q1['IS_ENGINE_RUNNING'] = 0 then
      (Sender as TDBGrid).Canvas.Font.Color := clRed
    else
      (Sender as TDBGrid).Canvas.Font.Color := clBlue;
    gs.DefaultDrawColumnCell(Rect, DataCol, Column, State);
  end;
end;

procedure TFLIGHT_SELECT_F.rg_flight_typeClick(Sender: TObject);
begin
  case rg_flight_type.ItemIndex of
    0:
      begin
        rgb_limit.Enabled := false;
        rgb_etl.Enabled := true;
      end;
    1:
      begin
        rgb_limit.Enabled := true;
        rgb_etl.Enabled := false;
      end;
  end;
end;

end.
