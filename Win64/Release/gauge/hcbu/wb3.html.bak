<!doctype html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>Gauge Test</title>
    <link rel="stylesheet" href="../fonts/fonts.css">
    <script src="../gauge.min.js"></script>
</head>
<body style="background: #fff">
 
        <canvas id="canvasPressure" width="100" height="100"></canvas>
	    <canvas id="canvasHeading" width="100" height="100"></canvas> 
		<canvas id="canvasVcc" width="100" height="100"></canvas> 
		<canvas id="canvasSignal" width="100" height="100"></canvas> 
		
 




<script>
    var gaugePressure = new RadialGauge({
        renderTo: 'canvasPressure',
        width: 200,
        height: 150,
        units: "---- hPa",
        startAngle: 60,
        ticksAngle: 220,
        colorPlate: "#ffffff",
        colorUnits: "#3CA7DB",
        colorNumbers: "#00008b",
        needleType: "arrow",
        needleStart: 0,
        needleEnd: 75,
        needleWidth: 4,
        needleCircleSize: 10,
        needleCircleInner: false,
        needleCircleOuter: true,
        needleShadow: false,
        colorNeedle: "#3CA7DB",
        colorNeedleEnd: "#2698CE",
        colorNeedleCircleOuter: "#3CA7DB",
        colorNeedleCircleOuterEnd: "#3CA7DB",
//        barWidth: 5,
//        colorBarProgress: '#3CA7DB',
//        colorBar: '#A8D3D5',

        colorMajorTicks: ["#A8D3D5", "#ffffff", "#ffffff", "#ffffff", "#ffffff",
            "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#A8D3D5"],
        colorMinorTicks: "#ffffff",

        // Вопрос в мин и макс значениях, при этих значениях анимация не работает
        minValue: 975,
        maxValue: 1045,

        majorTicks: ["","980","","990","","1000","","1010","","1020","","1030","","1040",""],
        minorTicks: "10",
        strokeTicks: true,

        highlights: [
            {
                "from": 974.75,
                "to": 1045.25,
                "color": "#A8D3D5"
            }
        ],
        //
        highlightsWidth: 25,
        numbersMargin: 12,
        animation: false,
        animationRule: "linear",
        valueBox: false,
        borders: false,
        borderShadowWidth: 0,
        value: 975,
        animateOnInit: false,
        animatedValue: false

    }).draw();
	
	var gaugeHeading = new RadialGauge({
        renderTo: 'canvasHeading',
        width: 200,
        height: 150,
        units: "--- Deg",
        startAngle: 0,
        ticksAngle: 360,
        colorPlate: "#ffffff",
        colorUnits: "#3CA7DB",
        colorNumbers: "#00008b",
        needleType: "arrow",
        needleStart: 0,
        needleEnd: 75,
        needleWidth: 4,
        needleCircleSize: 5,
        needleCircleInner: false,
        needleCircleOuter: true,
        needleShadow: false,
        colorNeedle: "#3CA7DB",
        colorNeedleEnd: "#2698CE",
        colorNeedleCircleOuter: "#3CA7DB",
        colorNeedleCircleOuterEnd: "#3CA7DB",
//        barWidth: 5,
//        colorBarProgress: '#3CA7DB',
//        colorBar: '#A8D3D5',

        colorMajorTicks: ["#A8D3D5", "#ffffff", "#ffffff", "#ffffff", "#ffffff",
            "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#A8D3D5"],
        colorMinorTicks: "#ffffff",

        // Вопрос в мин и макс значениях, при этих значениях анимация не работает
        minValue: 0,
        maxValue: 360,

        majorTicks: ["S","SW","W","NW","N","NE","E","SE"," "],
        minorTicks: "10",
        strokeTicks: false,

        highlights: [
            {
                "from": 0,
                "to": 360,
                "color": "#A8D3D5"
            }
        ],
        //
        highlightsWidth: 15,
        numbersMargin: 12,
        animation: false,
        animationRule: "linear",
        valueBox: false,
        borders: false,
        borderShadowWidth: 0,
        value: 360,
        animateOnInit: false,
        animatedValue: false

    }).draw();
	
	var gaugeSignal = new RadialGauge({
        renderTo: 'canvasSignal',
        width: 250,
        height: 180,
        units: "---- dbm",
        title: "GSM Strength",
		colorTitle: '#000000',
        startAngle: 90,
        ticksAngle: 180,
        colorPlate: "#ffffff",
        //colorPlateEnd: "#ffffff",
        colorUnits: "#3CA7DB",
        colorNumbers: "#534638",
        colorNeedle: "#8E7860",
        colorNeedleEnd: "#8E7860",
        colorNeedleCircleOuter: "#8E7860",
        colorNeedleCircleOuterEnd: "#8E7860",

        colorNeedleShadowUp: "#8E7860",
        colorNeedleShadowDown: "#8E7860",

        colorMajorTicks: ["#EBEBEB", "#EBEBEB", "#EBEBEB", "#EBEBEB", "#EBEBEB", "#EBEBEB"],
        colorMinorTicks: "#EBEBEB",

        minValue: 0,
        maxValue: 31,
        majorTicks: ["","10","15","20","25","30"],
        minorTicks: "2",
        strokeTicks: true,
        highlights: [
            {
                "from": 0,
                "to": 9.99,
                "color": "#db7093"
            },
            {
                "from": 10,
                "to": 14.99,
                "color": "#ff7f50"
            },
            {
                "from": 15,
                "to": 19.99,
                "color": "#98fb98"
            },
			{
                "from": 20,
                "to": 31,
                "color": "#008000"
            }
        ],
        //
        highlightsWidth: 25,
        numbersMargin: 12,
        //
        //barWidth: 20,
        //barStrokeWidth: 0,
        //barProgress: 1,
        //barShadow: 0,
        //
        animation: false,
        //animationDuration: 500,
        animationRule: "linear",
        animatedValue: false,
        //animateOnInit: true,

        borders: false,
        valueBox: false,

        needleType: "arrow",
        needleEnd: 65,
        needleWidth: 4,
        needleCircleSize: 10,
        needleCircleInner: false,
        needleCircleOuter: true,
        needleShadow: false,

        borderShadowWidth: 0

    }).draw();
	var gaugeVcc = new RadialGauge({
        renderTo: 'canvasVcc',
        width: 200,
        height: 150,
        units: "---- Vcc",
        startAngle: 90,
        ticksAngle: 180,
        colorPlate: "#ffffff",
        colorUnits: "#000000",
		 
        colorNumbers: "#00008b",
        needleType: "arrow",
        needleStart: 0,
        needleEnd: 75,
        needleWidth: 4,
        needleCircleSize: 10,
        needleCircleInner: false,
        needleCircleOuter: true,
        needleShadow: false,
        colorNeedle: "#000000",
        colorNeedleEnd: "#000000",
        colorNeedleCircleOuter: "#3CA7DB",
        colorNeedleCircleOuterEnd: "#3CA7DB",
//        barWidth: 5,
//        colorBarProgress: '#3CA7DB',
//        colorBar: '#A8D3D5',

        colorMajorTicks: ["#A8D3D5", "#ffffff", "#ffffff", "#ffffff", "#ffffff",
            "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#ffffff", "#A8D3D5"],
        colorMinorTicks: "#ffffff",

        // Вопрос в мин и макс значениях, при этих значениях анимация не работает
        minValue: 2.75,
        maxValue: 6.25,

         majorTicks: ["","3.0","","3.5","","4.0","","4.5","","5.0","","5.5","","6.0",""],
	   //  majorTicks: ["","3.0","3.5","4.0","4.5","5.0","5.5","6.0"," "],
        minorTicks: "10",
        strokeTicks: true,

        highlights: [
            {
                "from": 2.50,
                "to": 4.50,
                "color": "#FF0000"
            },
			{
                "from": 4.51,
                "to": 4.90,
                "color": "#ff7f50"
            },
			{
                "from": 4.91,
                "to": 5.50,
                "color": "#008000"
            },
			{
                "from": 5.51,
                "to": 6.50,
                "color": "#FF0000"
            }
        ],
        //
        highlightsWidth: 25,
        numbersMargin: 12,
        animation: false,
        animationRule: "linear",
        valueBox: false,
        borders: false,
        borderShadowWidth: 0,
        value: 3.0,
        animateOnInit: false,
        animatedValue: false

    }).draw();

	
	
	
               
    function gauge_pressure_x (xmsg) {
		      gaugePressure.value = xmsg;  gaugePressure.update({ units: parseInt(xmsg, 10) + ' hPa' });
		    }
	function gauge_heading_x (mmsg) {
		      gaugeHeading.value = mmsg;  gaugeHeading.update({ units: parseInt(mmsg, 10) + ' Deg' });
		    }	
    function gauge_signal_x (mmsg,ddbm) {
		      gaugeSignal.value = mmsg;  gaugeSignal.update({ units: parseInt(ddbm, 10) + ' dbm' });
		    }
	function gauge_vcc_x (xmsg) {
		      gaugeVcc.value = parseFloat(xmsg).toFixed(2);  gaugeVcc.update({ units: parseFloat(xmsg).toFixed(2) + ' Vcc' });
            }
			    function Getbaro_hpa(msg) {
		         gauge_pressure_x (msg) ;  return "hPa="+msg}; 
				 
			    function GetHdg_magn(msg2) {
		         gauge_heading_x (msg2) ;  return "Hdg magn="+msg2}; 
				function GetSignal(msg2,ddbm) {
		         gauge_signal_x (msg2,ddbm) ;  return "Signal="+msg2}; 
				function GetVcc(msg) {
		         gauge_vcc_x (msg) ;  return "Vcc="+msg};  
			 
	 
     
 
</script>
    
</body>
</html>

 
